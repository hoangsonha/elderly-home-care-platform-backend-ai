server:
  port: 8080
  servlet:
    context-path: /
  address: 0.0.0.0

spring:
  application:
    name: elderly-platform
  datasource:
    url: jdbc:postgresql://${DB_HOSTNAME:localhost}:${DB_PORT:5432}/elderly_platform
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456789}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        format_sql: true
    show-sql: true

jwt:
  secret: 753474857438754387594385743975348574893759843753498776576576575765634545435365346534645645364565465347657547465
  expiration: 8640000
  refresh:
    secret: 123454857438754387594385743975348574893759843753498776576576575765634545435365346534645645364565465347657554321
    expiration: 864000000
  algorithms: HmacSHA256

swagger:
  app:
    name: ElderlyCarePlatform
  add:
    security:
      name: ElderlyCarePlatformSecurity
  scheme: Bearer
  format: JWT
  dev:
    url: http://localhost:8080/
  pro:
    url: https://elderlycareplatform.azurewebsites.net/

application:
  default:
    current-page: 1
    page-size: 5

ai:
  matching:
    service:
      url: http://ai_matching:8000

# CORS Configuration
cors:
  # Set to true to allow all origins (for development/public APIs)
  allow-all-origins: ${CORS_ALLOW_ALL:false}
  # Comma-separated list of additional allowed origins
  # Example: http://example.com,https://app.example.com
  allowed-origins: ${CORS_ALLOWED_ORIGINS:}